<?php

/**
 * BaseTopic
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property string $title
 * @property string $pdf_filename
 * @property User $User
 * 
 * @method integer getId()           Returns the current record's "id" value
 * @method integer getUserId()       Returns the current record's "user_id" value
 * @method string  getTitle()        Returns the current record's "title" value
 * @method string  getPdfFilename()  Returns the current record's "pdf_filename" value
 * @method User    getUser()         Returns the current record's "User" value
 * @method Topic   setId()           Sets the current record's "id" value
 * @method Topic   setUserId()       Sets the current record's "user_id" value
 * @method Topic   setTitle()        Sets the current record's "title" value
 * @method Topic   setPdfFilename()  Sets the current record's "pdf_filename" value
 * @method Topic   setUser()         Sets the current record's "User" value
 * 
 * @package    DOUBLECLICK
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTopic extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('topic');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('pdf_filename', 'string', 36, array(
             'type' => 'string',
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}