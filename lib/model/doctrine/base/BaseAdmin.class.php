<?php

/**
 * BaseAdmin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $password
 * @property Doctrine_Collection $Feedback
 * @property Doctrine_Collection $NewsletterAdmin
 * @property Doctrine_Collection $Topic
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method string              getEmail()           Returns the current record's "email" value
 * @method string              getPassword()        Returns the current record's "password" value
 * @method Doctrine_Collection getFeedback()        Returns the current record's "Feedback" collection
 * @method Doctrine_Collection getNewsletterAdmin() Returns the current record's "NewsletterAdmin" collection
 * @method Doctrine_Collection getTopic()           Returns the current record's "Topic" collection
 * @method Admin               setId()              Sets the current record's "id" value
 * @method Admin               setName()            Sets the current record's "name" value
 * @method Admin               setEmail()           Sets the current record's "email" value
 * @method Admin               setPassword()        Sets the current record's "password" value
 * @method Admin               setFeedback()        Sets the current record's "Feedback" collection
 * @method Admin               setNewsletterAdmin() Sets the current record's "NewsletterAdmin" collection
 * @method Admin               setTopic()           Sets the current record's "Topic" collection
 * 
 * @package    DOUBLECLICK
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAdmin extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('admin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('email', 'string', 80, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 80,
             ));
        $this->hasColumn('password', 'string', 32, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 32,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Feedback', array(
             'local' => 'id',
             'foreign' => 'admin_id'));

        $this->hasMany('NewsletterAdmin', array(
             'local' => 'id',
             'foreign' => 'admin_id'));

        $this->hasMany('Topic', array(
             'local' => 'id',
             'foreign' => 'admin_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}